- name: cni-plugin
  run:
    when: "${CHANGE_IN(cni-plugin)}"
  dependencies:
    - Prerequisites
  task:
    prologue:
      commands:
        - cd cni-plugin
    jobs:
      - name: cni-plugin tests
        commands:
          - ../.semaphore/run-and-monitor ci.log make ci
      - name: build windows cni-plugin images
        commands:
          - ../.semaphore/run-and-monitor ci.log make image-windows
- name: "cni-plugin: Windows"
  run:
    when: "false or ${CHANGE_IN(cni-plugin,process)}"
  dependencies:
    - Prerequisites
  task:
    secrets:
      - name: banzai-secrets
    prologue:
      commands:
        # Prepare azure configuration.
        - az login --service-principal -u "${AZ_SP_ID}" -p "${AZ_SP_PASSWORD}" --tenant "${AZ_TENANT_ID}" --output none
        - export AZURE_SUBSCRIPTION_ID=$AZ_SUBSCRIPTION_ID
        - export AZURE_TENANT_ID=$AZ_TENANT_ID
        - export AZURE_CLIENT_ID=$AZ_SP_ID
        - export AZURE_CLIENT_SECRET=$AZ_SP_PASSWORD
        - export REPORT_DIR=/home/semaphore/calico/process/testing/winfv-cni-plugin/report
        - export LOGS_DIR=~/fv.log
        - export RG_PREFIX=${USER}-win-cni-${SEMAPHORE_GIT_SHA:0:4}-pr${SEMAPHORE_GIT_PR_NUMBER}
        - cd cni-plugin
        - ../.semaphore/run-and-monitor build.log make bin/windows/calico.exe bin/windows/calico-ipam.exe bin/windows/win-fv.exe
    epilogue:
      always:
        commands:
          - artifact push job ${REPORT_DIR} --destination semaphore/test-results || true
          - artifact push job ${LOGS_DIR} --destination semaphore/logs || true
          - cd ~/calico/process/testing/winfv-cni-plugin/aso && make dist-clean
    env_vars:
      - name: SEMAPHORE_ARTIFACT_EXPIRY
        value: 2w
      - name: AZURE_LOCATION
        value: eastus2
      - name: KUBE_VERSION
        value: v1.29.7
    jobs:
      - name: Containerd - Windows FV - overlay
        execution_time_limit:
          minutes: 60
        commands:
          - export BACKEND=overlay
          - export AZURE_RESOURCE_GROUP=${RG_PREFIX}-${BACKEND}-rg
          - echo AZURE_RESOURCE_GROUP=${AZURE_RESOURCE_GROUP}
          - ../.semaphore/run-and-monitor win-fv-containerd.log ./.semaphore/run-win-fv.sh
      - name: Containerd - Windows FV - l2bridge
        execution_time_limit:
          minutes: 60
        commands:
          - export BACKEND=l2bridge
          - export AZURE_RESOURCE_GROUP=${RG_PREFIX}-${BACKEND}-rg
          - echo AZURE_RESOURCE_GROUP=${AZURE_RESOURCE_GROUP}
          - ../.semaphore/run-and-monitor win-fv-containerd.log ./.semaphore/run-win-fv.sh
