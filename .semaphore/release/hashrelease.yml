version: v1.0
name: Publish hashrelease
agent:
  machine:
    type: f1-standard-4
    os_image: ubuntu2204
execution_time_limit:
  hours: 4

global_job_config:
  secrets:
    - name: oss-release-secrets
    # Github SSH secret for pulling private repositories.
    - name: private-repo
    # Secret for GitHub API access.
    - name: marvin-github-token
    # Secret for pushing to the docs box.
    - name: docs-ssh
    # Secret for image registries
    - name: quay-hashrelease
    - name: docker
    - name: iss-image-scanning
    # Secrets for Slack notifications
    - name: releasebot-slack
  prologue:
    commands:
      - chmod 0600 ~/.keys/*
      - ssh-add ~/.keys/*
      # Checkout the code and unshallow it.
      - checkout
      - retry git fetch --quiet --unshallow
      # Log in to container registries needed for release.
      - echo $DOCKER_TOKEN | docker login --username "$DOCKER_USER" --password-stdin
      - echo $QUAY_TOKEN | docker login --username "$QUAY_USER" --password-stdin quay.io
      # Credentials for accessing gcloud, needed to push images to gcr
      - export GOOGLE_APPLICATION_CREDENTIALS=$HOME/secrets/gcr-credentials.json
      - gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
      # Manually log in to GCR until we can test the gcr credentials helper
      - cat ${GOOGLE_APPLICATION_CREDENTIALS} | docker login -u _json_key --password-stdin https://gcr.io
      - cat ${GOOGLE_APPLICATION_CREDENTIALS} | docker login -u _json_key --password-stdin https://eu.gcr.io
      - cat ${GOOGLE_APPLICATION_CREDENTIALS} | docker login -u _json_key --password-stdin https://asia.gcr.io
      - cat ${GOOGLE_APPLICATION_CREDENTIALS} | docker login -u _json_key --password-stdin https://us.gcr.io

blocks:
  - name: Publish hashrelease
    task:
      jobs:
        - name: Build and publish hashrelease
          commands:
            - if [[ ${SEMAPHORE_WORKFLOW_TRIGGERED_BY_SCHEDULE} == "true" ]]; then export BUILD_CONTAINER_IMAGES=true; export PUBLISH_IMAGES=true; fi
            - make hashrelease
      prologue:
        commands:
          - export GITHUB_TOKEN=${MARVIN_GITHUB_TOKEN}
          - cd release
