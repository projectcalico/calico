// Copyright (c) 2025 Tigera, Inc. All rights reserved.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v3 "github.com/projectcalico/api/pkg/apis/projectcalico/v3"
	projectcalicov3 "github.com/projectcalico/api/pkg/client/clientset_generated/clientset/typed/projectcalico/v3"
	gentype "k8s.io/client-go/gentype"
)

// fakeFelixConfigurations implements FelixConfigurationInterface
type fakeFelixConfigurations struct {
	*gentype.FakeClientWithList[*v3.FelixConfiguration, *v3.FelixConfigurationList]
	Fake *FakeProjectcalicoV3
}

func newFakeFelixConfigurations(fake *FakeProjectcalicoV3) projectcalicov3.FelixConfigurationInterface {
	return &fakeFelixConfigurations{
		gentype.NewFakeClientWithList[*v3.FelixConfiguration, *v3.FelixConfigurationList](
			fake.Fake,
			"",
			v3.SchemeGroupVersion.WithResource("felixconfigurations"),
			v3.SchemeGroupVersion.WithKind("FelixConfiguration"),
			func() *v3.FelixConfiguration { return &v3.FelixConfiguration{} },
			func() *v3.FelixConfigurationList { return &v3.FelixConfigurationList{} },
			func(dst, src *v3.FelixConfigurationList) { dst.ListMeta = src.ListMeta },
			func(list *v3.FelixConfigurationList) []*v3.FelixConfiguration {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v3.FelixConfigurationList, items []*v3.FelixConfiguration) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
