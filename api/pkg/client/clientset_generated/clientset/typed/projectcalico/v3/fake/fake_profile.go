// Copyright (c) 2025 Tigera, Inc. All rights reserved.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v3 "github.com/projectcalico/api/pkg/apis/projectcalico/v3"
	projectcalicov3 "github.com/projectcalico/api/pkg/client/clientset_generated/clientset/typed/projectcalico/v3"
	gentype "k8s.io/client-go/gentype"
)

// fakeProfiles implements ProfileInterface
type fakeProfiles struct {
	*gentype.FakeClientWithList[*v3.Profile, *v3.ProfileList]
	Fake *FakeProjectcalicoV3
}

func newFakeProfiles(fake *FakeProjectcalicoV3) projectcalicov3.ProfileInterface {
	return &fakeProfiles{
		gentype.NewFakeClientWithList[*v3.Profile, *v3.ProfileList](
			fake.Fake,
			"",
			v3.SchemeGroupVersion.WithResource("profiles"),
			v3.SchemeGroupVersion.WithKind("Profile"),
			func() *v3.Profile { return &v3.Profile{} },
			func() *v3.ProfileList { return &v3.ProfileList{} },
			func(dst, src *v3.ProfileList) { dst.ListMeta = src.ListMeta },
			func(list *v3.ProfileList) []*v3.Profile { return gentype.ToPointerSlice(list.Items) },
			func(list *v3.ProfileList, items []*v3.Profile) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
