// Copyright (c) 2025 Tigera, Inc. All rights reserved.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v3 "github.com/projectcalico/api/pkg/apis/projectcalico/v3"
	projectcalicov3 "github.com/projectcalico/api/pkg/client/clientset_generated/clientset/typed/projectcalico/v3"
	gentype "k8s.io/client-go/gentype"
)

// fakeQoSPolicies implements QoSPolicyInterface
type fakeQoSPolicies struct {
	*gentype.FakeClientWithList[*v3.QoSPolicy, *v3.QoSPolicyList]
	Fake *FakeProjectcalicoV3
}

func newFakeQoSPolicies(fake *FakeProjectcalicoV3) projectcalicov3.QoSPolicyInterface {
	return &fakeQoSPolicies{
		gentype.NewFakeClientWithList[*v3.QoSPolicy, *v3.QoSPolicyList](
			fake.Fake,
			"",
			v3.SchemeGroupVersion.WithResource("qospolicies"),
			v3.SchemeGroupVersion.WithKind("QoSPolicy"),
			func() *v3.QoSPolicy { return &v3.QoSPolicy{} },
			func() *v3.QoSPolicyList { return &v3.QoSPolicyList{} },
			func(dst, src *v3.QoSPolicyList) { dst.ListMeta = src.ListMeta },
			func(list *v3.QoSPolicyList) []*v3.QoSPolicy { return gentype.ToPointerSlice(list.Items) },
			func(list *v3.QoSPolicyList, items []*v3.QoSPolicy) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
