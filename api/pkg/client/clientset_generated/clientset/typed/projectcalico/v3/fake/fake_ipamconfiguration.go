// Copyright (c) 2025 Tigera, Inc. All rights reserved.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v3 "github.com/projectcalico/api/pkg/apis/projectcalico/v3"
	projectcalicov3 "github.com/projectcalico/api/pkg/client/clientset_generated/clientset/typed/projectcalico/v3"
	gentype "k8s.io/client-go/gentype"
)

// fakeIPAMConfigurations implements IPAMConfigurationInterface
type fakeIPAMConfigurations struct {
	*gentype.FakeClientWithList[*v3.IPAMConfiguration, *v3.IPAMConfigurationList]
	Fake *FakeProjectcalicoV3
}

func newFakeIPAMConfigurations(fake *FakeProjectcalicoV3) projectcalicov3.IPAMConfigurationInterface {
	return &fakeIPAMConfigurations{
		gentype.NewFakeClientWithList[*v3.IPAMConfiguration, *v3.IPAMConfigurationList](
			fake.Fake,
			"",
			v3.SchemeGroupVersion.WithResource("ipamconfigurations"),
			v3.SchemeGroupVersion.WithKind("IPAMConfiguration"),
			func() *v3.IPAMConfiguration { return &v3.IPAMConfiguration{} },
			func() *v3.IPAMConfigurationList { return &v3.IPAMConfigurationList{} },
			func(dst, src *v3.IPAMConfigurationList) { dst.ListMeta = src.ListMeta },
			func(list *v3.IPAMConfigurationList) []*v3.IPAMConfiguration {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v3.IPAMConfigurationList, items []*v3.IPAMConfiguration) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
