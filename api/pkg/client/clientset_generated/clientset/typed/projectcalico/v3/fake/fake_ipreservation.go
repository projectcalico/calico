// Copyright (c) 2025 Tigera, Inc. All rights reserved.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v3 "github.com/projectcalico/api/pkg/apis/projectcalico/v3"
	projectcalicov3 "github.com/projectcalico/api/pkg/client/clientset_generated/clientset/typed/projectcalico/v3"
	gentype "k8s.io/client-go/gentype"
)

// fakeIPReservations implements IPReservationInterface
type fakeIPReservations struct {
	*gentype.FakeClientWithList[*v3.IPReservation, *v3.IPReservationList]
	Fake *FakeProjectcalicoV3
}

func newFakeIPReservations(fake *FakeProjectcalicoV3) projectcalicov3.IPReservationInterface {
	return &fakeIPReservations{
		gentype.NewFakeClientWithList[*v3.IPReservation, *v3.IPReservationList](
			fake.Fake,
			"",
			v3.SchemeGroupVersion.WithResource("ipreservations"),
			v3.SchemeGroupVersion.WithKind("IPReservation"),
			func() *v3.IPReservation { return &v3.IPReservation{} },
			func() *v3.IPReservationList { return &v3.IPReservationList{} },
			func(dst, src *v3.IPReservationList) { dst.ListMeta = src.ListMeta },
			func(list *v3.IPReservationList) []*v3.IPReservation { return gentype.ToPointerSlice(list.Items) },
			func(list *v3.IPReservationList, items []*v3.IPReservation) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
