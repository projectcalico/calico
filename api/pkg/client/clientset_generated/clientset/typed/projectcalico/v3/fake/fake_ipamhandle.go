// Copyright (c) 2025 Tigera, Inc. All rights reserved.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v3 "github.com/projectcalico/api/pkg/apis/projectcalico/v3"
	projectcalicov3 "github.com/projectcalico/api/pkg/client/clientset_generated/clientset/typed/projectcalico/v3"
	gentype "k8s.io/client-go/gentype"
)

// fakeIPAMHandles implements IPAMHandleInterface
type fakeIPAMHandles struct {
	*gentype.FakeClientWithList[*v3.IPAMHandle, *v3.IPAMHandleList]
	Fake *FakeProjectcalicoV3
}

func newFakeIPAMHandles(fake *FakeProjectcalicoV3, namespace string) projectcalicov3.IPAMHandleInterface {
	return &fakeIPAMHandles{
		gentype.NewFakeClientWithList[*v3.IPAMHandle, *v3.IPAMHandleList](
			fake.Fake,
			namespace,
			v3.SchemeGroupVersion.WithResource("ipamhandles"),
			v3.SchemeGroupVersion.WithKind("IPAMHandle"),
			func() *v3.IPAMHandle { return &v3.IPAMHandle{} },
			func() *v3.IPAMHandleList { return &v3.IPAMHandleList{} },
			func(dst, src *v3.IPAMHandleList) { dst.ListMeta = src.ListMeta },
			func(list *v3.IPAMHandleList) []*v3.IPAMHandle { return gentype.ToPointerSlice(list.Items) },
			func(list *v3.IPAMHandleList, items []*v3.IPAMHandle) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
