function apply_communities ()
{
}

# Generated by confd
include "bird_aggr.cfg";
include "bird_ipam.cfg";

router id 10.192.0.2;

# Configure synchronization between routing tables and kernel.
protocol kernel {
  learn;             # Learn all alien routes from the kernel
  persist;           # Don't remove routes on bird shutdown
  scan time 2;       # Scan kernel routing table every 2 seconds
  import all;
  export filter calico_kernel_programming; # Default is export none
  graceful restart;  # Turn on graceful restart to reduce potential flaps in
                     # routes when reloading BIRD configuration.  With a full
                     # automatic mesh, there is no way to prevent BGP from
                     # flapping since multiple nodes update their BGP
                     # configuration at the same time, GR is not guaranteed to
                     # work correctly in this scenario.
  merge paths on;    # Allow export multipath routes (ECMP)
}

# Watch interface up/down events.
protocol device {
  debug { states };
  scan time 2;    # Scan interfaces every 2 seconds
}

protocol direct {
  debug { states };
  interface -"cali*", -"kube-ipvs*", "*"; # Exclude cali* and kube-ipvs* but
                                          # include everything else.  In
                                          # IPVS-mode, kube-proxy creates a
                                          # kube-ipvs0 interface. We exclude
                                          # kube-ipvs0 because this interface
                                          # gets an address for every in use
                                          # cluster IP. We use static routes
                                          # for when we legitimately want to
                                          # export cluster IPs.
}


# Template for all BGP clients
template bgp bgp_template {
  debug { states };
  description "Connection to BGP peer";
  local as 64532;
  gateway recursive; # This should be the default, but just in case.
  add paths on;
  graceful restart;  # See comment in kernel section about graceful restart.
  connect delay time 2;
  connect retry time 5;
  error wait time 5,30;
}

# -------------- BGP Filters ------------------
# No v4 BGPFilters configured

# ------------- Node-to-node mesh -------------
# This node (kube-master) is configured as a route reflector with cluster ID 10.0.0.1;
# ignore node-to-node mesh setting.


# ------------- Global peers -------------



# For peer /bgp/v1/global/peer_v4/172.19.4.87
protocol bgp Global_172_19_4_87 from bgp_template {
  ttl security off;
  multihop;
  neighbor 172.19.4.87 as 64533;
  source address 10.192.0.2;  # The local address we use for the TCP connection
  import filter {
    accept; # Prior to introduction of BGP Filters we used "import all" so use default accept behaviour on import
  };
  export filter {
    calico_export_to_bgp_peers();
    reject; # Prior to introduction of BGP Filters anything not explicitly exported through calico_export_to_bgp_peers()
            # was rejected so use default reject behaviour on export
  };  # Only want to export routes for workloads.
  next hop keep;
}




# ------------- Node-specific peers -------------

# No node-specific peers configured.

