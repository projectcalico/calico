// Code generated by "stringer -type=Kind"; DO NOT EDIT.

package tokenizer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokNone-0]
	_ = x[TokLabel-1]
	_ = x[TokStringLiteral-2]
	_ = x[TokLBrace-3]
	_ = x[TokRBrace-4]
	_ = x[TokComma-5]
	_ = x[TokEq-6]
	_ = x[TokNe-7]
	_ = x[TokIn-8]
	_ = x[TokNot-9]
	_ = x[TokNotIn-10]
	_ = x[TokContains-11]
	_ = x[TokStartsWith-12]
	_ = x[TokEndsWith-13]
	_ = x[TokAll-14]
	_ = x[TokHas-15]
	_ = x[TokLParen-16]
	_ = x[TokRParen-17]
	_ = x[TokAnd-18]
	_ = x[TokOr-19]
	_ = x[TokGlobal-20]
	_ = x[TokEOF-21]
}

const _Kind_name = "TokNoneTokLabelTokStringLiteralTokLBraceTokRBraceTokCommaTokEqTokNeTokInTokNotTokNotInTokContainsTokStartsWithTokEndsWithTokAllTokHasTokLParenTokRParenTokAndTokOrTokGlobalTokEOF"

var _Kind_index = [...]uint8{0, 7, 15, 31, 40, 49, 57, 62, 67, 72, 78, 86, 97, 110, 121, 127, 133, 142, 151, 157, 162, 171, 177}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
